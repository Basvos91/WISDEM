# This is a workflow to test the installation of WISDEM and the units tests that come with it

name: CI_WISDEM

# We run CI on push commits and pull requests on master and develop branches
on:
  push:
    branches: [ develop , f/GHA]
  pull_request:
    branches: [ develop , f/GHA]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single build
  build:
    name: Compile and run examples
    # We run the script on a matrix of operating systems and python versions
    runs-on: ${{ matrix.os }}
    strategy:
      # Fail-fast set to false lets the jobs across platforms continue even if one fails
      fail-fast: false
      matrix:
        # Operating systems
        os: [windows-latest, ubuntu-latest, macOS-latest]
        # Python versions
        python-version: [3.8]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so that the job can access it
      - uses: actions/checkout@v2
      # GitHub Actions sintax to setup a conda environment (do not change)
      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          update-conda: true
          python-version: ${{ matrix.python-version }}
          conda-channels: anaconda, conda-forge
      - run: conda --version
      - run: which python
      
      # Install dependencies of WISDEM common across platforms
      - name: Install dependencies
        run: |
          conda install -y wisdem git jupyter
          conda remove --force wisdem
          pip install simpy marmot-agents
      
      # Install dependencies of WISDEM specific to macOS
      - name: Add dependendencies macOS specific
        if: contains( matrix.os, 'macOS')
        run: |
          conda install -y petsc4py mpi4py compilers
      
      # Install dependencies of WISDEM specific to ubuntu
      - name: Add dependendencies ubuntu specific
        if: contains( matrix.os, 'ubuntu')
        run: |
          conda install -y petsc4py mpi4py compilers
      
      # Install dependencies of WISDEM specific to windows
      - name: Add dependendencies windows specific
        if: contains( matrix.os, 'windows')
        run: |
          conda install -y m2w64-toolchain libpython
      
      # Install WISDEM
      - name: Install WISDEM
        run: |
          python setup.py develop

      # Install pyOptSparse
      - name: Install pyOptSparse
        run: |
          git clone https://github.com/evan-gaertner/pyoptsparse.git
          cd pyoptsparse
          python setup.py install
          cd ..
      
      # Run tests
      - name: Run unit tests
        run: |
          py.test
