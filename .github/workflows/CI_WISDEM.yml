name: CI_WISDEM

# We run CI on push commits and pull requests on master and develop branches
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        python-version: ["3.8"]
        
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          channels: conda-forge
          auto-update-conda: true
          #auto-activate-base: true
          python-version: 3.8
          environment-file: environment.yml
      
      # Install dependencies of WEIS specific to ubuntu (not with compilers)
      - name: Add dependencies ubuntu specific
        if: contains( matrix.os, 'ubuntu')
        run: |
          conda install -y petsc4py mpi4py compilers
      
      # Install dependencies of WEIS specific to windows
      - name: Add dependencies windows specific
        if: contains( matrix.os, 'windows')
        run: |
          conda install -y m2w64-toolchain libpython

      # Debugging session
      #- name: Setup tmate session
      #  uses: mxschmitt/action-tmate@v3
        
      # Install WISDEM
      - name: Install WISDEM
        shell: pwsh
        run: |
          python setup.py develop
      
      # Run all tests
      - name: Run tests
        shell: pwsh
        run: |
          pytest --cov-config=.coverageac --cov=wisdem
      
    #- name: Lint with flake8
    #  run: |
    #    $CONDA/bin/conda install flake8
    #    # stop the build if there are Python syntax errors or undefined names
    #    $CONDA/bin/flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #    $CONDA/bin/flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
      # Run coveralls
      - name: Run coveralls
        if: contains( matrix.os, 'ubuntu')
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
